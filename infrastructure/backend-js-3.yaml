---
apiVersion: v1
kind: Namespace
metadata:
  name: elastic-demo
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-js-3-env-cm
  namespace: elastic-demo
data:
  NODE_ENV: "production"
  APP_ID: "backend-3"
  NEXT_BACKEND_HOST: "http"
  ELASTIC_APM_ACTIVE: "true"
  ELASTIC_APM_SERVICE_NAME: "backend-3"
  ELASTIC_APM_SECRET_TOKEN: ""
  ELASTIC_APM_SERVER_URL: "http://172.0.139.174:8200"
  ELASTIC_APM_USE_PATH_AS_TRANSACTION_NAME: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-js-3-svc
  namespace: elastic-demo
spec:
  selector:
    id: backend-js-3-deploy
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-js-3-deploy
  namespace: elastic-demo
spec:
  selector:
    matchLabels:
      id: backend-js-3-deploy
  template:
    metadata:
      labels:
        id: backend-js-3-deploy
    spec:
      containers:
        - name: backend-js-3-deploy
          image: 975050129791.dkr.ecr.ap-southeast-3.amazonaws.com/elastic-demo/backend-js:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          envFrom:
            - configMapRef:
                name: backend-js-3-env-cm
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-js-3-hpa
  namespace: elastic-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend-js-3-deploy
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 75
          type: Utilization
      type: Resource
    - resource:
        name: memory
        target:
          averageUtilization: 75
          type: Utilization
      type: Resource
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-js-3-ing
  namespace: elastic-demo
  annotations:
    nginx.ingress.kubernetes.io/service-upstream: "true"
spec:
  rules:
    - host: elastic-backend-js-3.govtechindonesia.id
      http:
        paths:
        - backend:
            service:
              name: backend-js-3-svc
              port:
                number: 80
          path: /
          pathType: Prefix
  ingressClassName: nginx
